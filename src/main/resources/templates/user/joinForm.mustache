{{> layout/header}}

<div class="container p-5">
	<div class="card">
		<div class="card-header"><b>회원가입을 해주세요</b></div>
		<div class="card-body">
			<form action="/join" method="post" onsubmit="return valid()">
				<div class="mb-3">
					<input type="text" id="username" class="form-control" placeholder="Enter username" name="username"
					       required maxlength="20" onchange="usernameChange()">
					<button type="button" class="btn btn-warning" onclick="check()">중복체크</button>
				</div>
				<div class="mb-3">
					<input type="password" class="form-control" placeholder="Enter password" name="password"
					       required maxlength="20">
				</div>
				<div class="mb-3">
					<input type="email" class="form-control" placeholder="Enter email" name="email"
					       required maxlength="20">
				</div>
				<button id="btnJoin" type="submit" class="btn btn-primary form-control">회원가입</button>
			</form>
		</div>
	</div>
</div>

<script>
	let usernameSameCheck = false;

	function usernameChange() {
		console.log("변경됨");
		usernameSameCheck = false;
	}

	function valid() {
		if (usernameSameCheck) {
			return true;
		} else {
			alert("유저네임 중복체크를 해주세요.");
			return false;
		}
	}

	// 책임 : input 태그로 부터 username을 가져와서 통신을 요청하고, 중복이 되었는지 확인한다.
	async function check() {
		// 1. DOM으로부터 값 가져오기
		let username = document.querySelector("#username").value;
		// 2. 통신
		// 이벤트 루프에 걸리는 fetch를 보고 기다리게 만들기 위해 await을 붙인다.
		// 안붙이면 null 값이 들어오고 붙였을땐 제대로 값이 들어온다.
		let response = await fetch(`/check?username=${username}`);
		// 3. 파싱
		let responseBody = await response.json();
		console.log(responseBody);
		// 4.상태코드
		let btnJoin = document.querySelector("#btnJoin");
		if (responseBody.success === true) {
			alert("유저네임을 사용할 수 있습니다.");
			usernameSameCheck = true;
			document.querySelector("#username").setAttribute("readonly", true);
		} else {
			alert("유저네임을 사용할 수 없습니다.");
			usernameSameCheck = false;
		}
	}
</script>

{{> layout/footer}}